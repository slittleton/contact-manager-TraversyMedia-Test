{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","delete","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updateContact","match","params","put","Header","branding","href","About","NotFound","Test","title","body","fetch","then","response","json","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3272d01c.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch(action.type){\r\n    case 'DELETE_CONTACT':\r\n    return {\r\n      ...state, \r\n      contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n    };\r\n    case 'ADD_CONTACT':\r\n    return {\r\n      ...state, \r\n      contacts: [action.payload, ...state.contacts]\r\n    };\r\n    case 'UPDATE_CONTACT':\r\n    return {\r\n      ...state, \r\n      contacts: state.contacts.map(contact => \r\n        contact.id === action.payload.id  \r\n          ? (contact = action.payload)  \r\n          : contact)\r\n    };\r\n    default: \r\n      return state;\r\n  }\r\n}\r\n\r\nexport class Provider extends Component {\r\n  state={\r\n    contacts: [],\r\n    dispatch: action => {\r\n      this.setState(state => reducer(state, action))\r\n    }\r\n\r\n    \r\n  }\r\n  async componentDidMount(){\r\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n\r\n    this.setState({contacts: res.data});\r\n  }\r\n\r\n  render() {\r\n\r\n    return(\r\n      <Context.Provider value={this.state}>\r\n       { this.props.children}\r\n      </Context.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\n\r\n class Contact extends Component {\r\n  state={\r\n    showContactInfo: false,\r\n  };\r\n\r\n  onShowClick = (e) => {\r\n    this.setState({\r\n      showContactInfo: !this.state.showContactInfo\r\n    })\r\n  }\r\n  onDeleteClick = async (id, dispatch)=>{\r\n    await axios\r\n    .delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    \r\n    dispatch({type: 'DELETE_CONTACT', payload: id,})\r\n\r\n  }\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const {showContactInfo } = this.state;\r\n\r\n    return (\r\n\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n            <h4>\r\n              {name} {' '}\r\n              <i onClick={this.onShowClick} \r\n              className=\"fas fa-sort-down\"\r\n              style={{cursor:'pointer'}}\r\n              />\r\n              <i className=\"fas fa-times\" \r\n                style={{cursor:'pointer', float:'right', color:'red'}}\r\n                onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n              />\r\n              <Link to={`contact/edit/${id}`}>\r\n                <i \r\n                className=\"fas fa-pencil-alt\"\r\n                style={{\r\n                  cursor: 'pointer',\r\n                  float: 'right',\r\n                  color: 'black',\r\n                  marginRight: '1rem',\r\n                }}\r\n                ></i>\r\n              </Link>\r\n            </h4>\r\n            {showContactInfo ? (\r\n            <ul className=\"list-group\">\r\n              <li className=\"list-group-item\">{email}</li>\r\n              <li className=\"list-group-item\">{phone}</li>\r\n            </ul>\r\n            ):null}\r\n          </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default Contact","import React, { Component } from 'react'\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context'\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return(\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return(\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact</span> List\r\n              </h1>\r\n            {contacts.map(contact => (\r\n              <Contact \r\n              key={contact.id}\r\n              contact={contact}\r\n              />\r\n            ))}\r\n          </React.Fragment>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n\r\n\r\n  }\r\n}\r\nexport default Contacts;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames'; // small module that allows you to add and remove classnames\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n  <div className=\"form-group\">\r\n    <label htmlFor={name}>{label}</label>\r\n    <input \r\n      type={type} \r\n      name={name}\r\n      className={classnames('form-control form-control-lg', {\r\n        'is-invalid': error // if error exists add is-invalid className\r\n      })}\r\n      placeholder={placeholder}\r\n      value={value}\r\n      onChange={onChange}\r\n\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n      \r\n  </div>\r\n  )\r\n}\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: 'text'\r\n};\r\n\r\nexport default TextInputGroup;","import React, { Component } from 'react'\r\nimport { Consumer } from '../../context';\r\n// import uuid from 'uuid';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\n//EXAMPLE OF CONTROLED COMPONENT\r\n class AddContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors:{},\r\n  }\r\nonChange = (e)=>{ this.setState({[e.target.name]: e.target.value})};\r\n\r\nonSubmit = async (dispatch, e) =>{\r\n  e.preventDefault();\r\n\r\n  const { name, email, phone } = this.state;\r\n\r\n  // Check For Errors\r\n  if(name === ''){\r\n    this.setState({errors:{name:'Name is required'}});\r\n    return;\r\n  }\r\n  if(email === ''){\r\n    this.setState({errors:{email :'Email is required'}});\r\n    return;\r\n  }\r\n  if(phone === ''){\r\n    this.setState({errors:{phone:'Phone is required'}});\r\n    return;\r\n  }\r\n\r\n  const newContact = {\r\n    // id: uuid(), // you need to install uuid to use this function to generate an id\r\n    name, \r\n    email,\r\n    phone\r\n  };\r\n\r\n  const res = await axios\r\n    .post('https://jsonplaceholder.typicode.com/users', newContact)\r\n\r\n  dispatch ({type: 'ADD_CONTACT', payload: res.data})\r\n  \r\n\r\n  //Clear State\r\n  this.setState({\r\n    name:'',\r\n    email:'',\r\n    phone:'',\r\n    errors:{}\r\n  })\r\n\r\n  this.props.history.push('/')\r\n\r\n}\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return(\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return(\r\n            <div className=\"card mb-3\">\r\n            <div className=\"card-header\">Add Contact</div>\r\n            <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n              <TextInputGroup \r\n                label=\"Name\"\r\n                name=\"name\"\r\n                placeholder=\"Enter Name\"\r\n                value={name}\r\n                onChange={this.onChange}\r\n                error={errors.name}\r\n              />\r\n              <TextInputGroup \r\n                label=\"Email\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                placeholder=\"Enter Email\"\r\n                value={email}\r\n                onChange={this.onChange}\r\n                error={errors.email}\r\n              />\r\n              <TextInputGroup \r\n                label=\"Phone\"\r\n                name=\"phone\"\r\n                placeholder=\"Enter Phone\"\r\n                value={phone}\r\n                onChange={this.onChange}\r\n                error={errors.phone}\r\n              />\r\n              <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-block btn-light\"/>\r\n            </form>\r\n          </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\nexport default AddContact;","import React, { Component } from 'react'\r\nimport { Consumer } from '../../context';\r\n// import uuid from 'uuid';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\n//EXAMPLE OF CONTROLED COMPONENT\r\n class EditContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors:{},\r\n  }\r\n\r\nasync componentDidMount() {\r\n  const { id } = this.props.match.params\r\n  const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n  const contact = res.data;\r\n  \r\n  this.setState({\r\n    name: contact.name,\r\n    email: contact.email,\r\n    phone: contact.phone\r\n  })\r\n\r\n}\r\n\r\nonChange = (e)=>{ this.setState({[e.target.name]: e.target.value})};\r\n\r\nonSubmit = async (dispatch, e) =>{\r\n  e.preventDefault();\r\n\r\n  const { name, email, phone } = this.state;\r\n\r\n  // Check For Errors\r\n  if(name === ''){\r\n    this.setState({errors:{name:'Name is required'}});\r\n    return;\r\n  }\r\n  if(email === ''){\r\n    this.setState({errors:{email :'Email is required'}});\r\n    return;\r\n  }\r\n  if(phone === ''){\r\n    this.setState({errors:{phone:'Phone is required'}});\r\n    return;\r\n  }\r\n\r\n  const updateContact = {\r\n    name,\r\n    email,\r\n    phone\r\n  }\r\n  const { id } = this.props.match.params;\r\n\r\n  const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updateContact);\r\n\r\n  dispatch({type:'UPDATE_CONTACT', payload: res.data})\r\n\r\n  //Clear State\r\n  this.setState({\r\n    name:'',\r\n    email:'',\r\n    phone:'',\r\n    errors:{}\r\n  })\r\n\r\n  this.props.history.push('/')\r\n\r\n}\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return(\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return(\r\n            <div className=\"card mb-3\">\r\n            <div className=\"card-header\">Edit Contact</div>\r\n            <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n              <TextInputGroup \r\n                label=\"Name\"\r\n                name=\"name\"\r\n                placeholder=\"Enter Name\"\r\n                value={name}\r\n                onChange={this.onChange}\r\n                error={errors.name}\r\n              />\r\n              <TextInputGroup \r\n                label=\"Email\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                placeholder=\"Enter Email\"\r\n                value={email}\r\n                onChange={this.onChange}\r\n                error={errors.email}\r\n              />\r\n              <TextInputGroup \r\n                label=\"Phone\"\r\n                name=\"phone\"\r\n                placeholder=\"Enter Phone\"\r\n                value={phone}\r\n                onChange={this.onChange}\r\n                error={errors.phone}\r\n              />\r\n              <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-block btn-light\"/>\r\n            </form>\r\n          </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\nexport default EditContact;","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\n const Header = (props) => {\r\n   const {branding} = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n      <a href=\"/\" className=\"navbar-brand\">{branding}</a>\r\n      <div>\r\n        <ul className=\"navbar-nav mr-auto\">\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/\" className=\"nav-link\">\r\n            <i className=\"fas fa-home\"> </i> Home\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/contact/add\" className=\"nav-link\">\r\n            <i className=\"fas fa-plus\"> </i> Add\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/about\" className=\"nav-link\">\r\n            <i className=\"fas fa-question\"> </i> About\r\n          </Link>\r\n        </li>\r\n        </ul>\r\n      </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"Display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\"><span className=\"text-danger\">404 Page Not Found</span></h1>\r\n      <p className=\"lead\">Sorry, that page does not exist</p>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\r\n\r\n\r\n class Test extends Component {\r\n  state={\r\n    title:'',\r\n    body:''\r\n  }\r\n\r\n  // Lifecycle methods\r\n  componentDidMount() {\r\n\r\n    fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n      .then(response => response.json())\r\n      .then(data => this.setState({\r\n        title: data.title,\r\n        body: data.body\r\n      }))\r\n      \r\n\r\n    // console.log('componentDidMount...');\r\n  }\r\n  // componentWillMount() { //Depricated\r\n  //   console.log('componentWillMount...');\r\n  // }\r\n  // componentDidUpdate() {\r\n  //   console.log('componentDidUpdate...');\r\n  // }\r\n  // componentWillUpdate() {//Depricated\r\n  //   console.log('componentWillUpdate...');\r\n  // }\r\n  // componentWillReceiveProps(nextProps, nextState){//Depricated\r\n  //   console.log('componentWillReceiveProps...')\r\n  // }\r\n  // static getDerivedStateFromProps(nextProps, prevState){ // must use return, cannot use setState\r\n  //   return null;\r\n  // }\r\n  // getSnapshotBeforeUpdate(prevProps, prevstate){\r\n\r\n  // }\r\n  \r\n  render() {\r\n    const{ title, body } = this.state\r\n    return (\r\n      <div>\r\n        <h1>Test Component</h1>\r\n        <p>{title}</p>\r\n        <p>{body}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Test;","import React, { Component } from 'react';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\nimport { Provider } from './context';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\"/>\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\"component={Contacts}/>\n                <Route exact path=\"/about\"component={About}/>\n                <Route exact path=\"/contact/add\"component={AddContact}/>\n                <Route exact path=\"/contact/edit/:id\"component={EditContact}/>\n                <Route exact path=\"/test\"component={Test}/>\n                <Route component={NotFound}/>\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}